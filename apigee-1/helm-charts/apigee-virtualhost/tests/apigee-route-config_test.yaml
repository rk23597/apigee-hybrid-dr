# below comment needs to be present to detect invalid test schema
# yaml-language-server: $schema=https://raw.githubusercontent.com/quintush/helm-unittest/master/schema/helm-testsuite.json
suite: apigee-route-config-test
templates:
- apigee-route-config.yaml
release:
  name: test-release

tests:
- it: apigee route config should be empty without overriding
  asserts:
  - hasDocuments:
      count: 0
- it: apigee route config should not be empty
  set:
    envgroup: test-egroup
  values:
  - test-values.yaml
  asserts:
  - isKind:
      of: ApigeeRouteConfig
  - isAPIVersion:
      of: apigee.cloud.google.com/v1alpha1
  - equal:
      path: metadata.name
      value: unittest-test-egroup
- it: apigee route config default selector
  set:
    envgroup: test-egroup
  values:
  - test-values.yaml
  asserts:
  - isSubset:
      path: spec.selector
      content:
        app: istio-ingressgateway
- it: apigee route config with overridden selector
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      selector:
        test: unit
        foo: bar
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.selector["test"]
      value: unit
  - equal:
      path: spec.selector["foo"]
      value: bar
- it: apigee route config default additionalGateways should be empty
  set:
    envgroup: test-egroup
  values:
  - test-values.yaml
  asserts:
  - isNull:
      path: spec.additionalGateways
- it: apigee route config with overridden additionalGateways
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      additionalGateways:
      - unit-test
      - foo-bar
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.additionalGateways[0]
      value: unit-test
  - equal:
      path: spec.additionalGateways[1]
      value: foo-bar
- it: apigee route config default connectTimeout
  set:
    envgroup: test-egroup
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.connectTimeout
      value: 300
- it: apigee route config should have overridden connectTimeout
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      connectTimeout: 369
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.connectTimeout
      value: 369
- it: apigee route config default tls mode
  set:
    envgroup: test-egroup
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.mode
      value: SIMPLE
- it: apigee route config should have tls mode
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      tlsMode: MUTUAL
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.mode
      value: MUTUAL
- it: apigee route config default secretNameRef when files are provide
  set:
    envgroup: test-egroup
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.secretNameRef
      value: unittest-test-egroup
- it: apigee route config should have provided name when used secretNameRef
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      sslSecret: foo-unittest
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.secretNameRef
      value: foo-unittest
- it: apigee route config minProtocolVersion should be empty by default
  set:
    envgroup: test-egroup
  values:
  - test-values.yaml
  asserts:
  - isNull:
      path: spec.tls.minProtocolVersion
- it: apigee route config minProtocolVersion should have overridden value for AUTO
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      minTLSProtocolVersion: "AUTO"
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.minProtocolVersion
      value: TLS_AUTO
- it: apigee route config minProtocolVersion should have overridden value for 1.1
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      minTLSProtocolVersion: "1.1"
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.minProtocolVersion
      value: TLSV1_1
- it: apigee route config minProtocolVersion should have overridden value for 1.2
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      minTLSProtocolVersion: "1.2"
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.minProtocolVersion
      value: TLSV1_2
- it: apigee route config minProtocolVersion should have overridden value for 1.3
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      minTLSProtocolVersion: "1.3"
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.minProtocolVersion
      value: TLSV1_3
- it: apigee route config maxProtocolVersion should be empty by default
  set:
    envgroup: test-egroup
  values:
  - test-values.yaml
  asserts:
  - isNull:
      path: spec.tls.maxProtocolVersion
- it: apigee route config maxProtocolVersion should have overridden value for AUTO
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      maxTLSProtocolVersion: "AUTO"
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.maxProtocolVersion
      value: TLS_AUTO
- it: apigee route config maxProtocolVersion should have overridden value for 1.1
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      maxTLSProtocolVersion: "1.1"
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.maxProtocolVersion
      value: TLSV1_1
- it: apigee route config maxProtocolVersion should have overridden value for 1.2
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      maxTLSProtocolVersion: "1.2"
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.maxProtocolVersion
      value: TLSV1_2
- it: apigee route config maxProtocolVersion should have overridden value for 1.3
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      maxTLSProtocolVersion: "1.3"
  values:
  - test-values.yaml
  asserts:
  - equal:
      path: spec.tls.maxProtocolVersion
      value: TLSV1_3
- it: apigee route config with ciphers
  set:
    envgroup: test-egroup
    virtualhosts:
    - name: test-egroup
      sslCertPath: "test-file.txt"
      sslKeyPath: "test-file.txt"
      cipherSuites:
      - "ECDHE-ECDSA-AES128-GCM-SHA256"
      - "ECDHE-RSA-AES128-GCM-SHA256"
      - "ECDHE-ECDSA-AES256-GCM-SHA384"
      - "ECDHE-RSA-AES256-GCM-SHA384"
      - "ECDHE-ECDSA-CHACHA20-POLY1305"
      - "ECDHE-RSA-CHACHA20-POLY1305"
      - "ECDHE-ECDSA-AES128-SHA"
      - "ECDHE-RSA-AES128-SHA"
      - "ECDHE-ECDSA-AES256-SHA"
      - "ECDHE-RSA-AES256-SHA"
  values:
  - test-values.yaml
  asserts:
  - isSubset:
      path: spec.tls
      content:
        cipherSuites:
        - "ECDHE-ECDSA-AES128-GCM-SHA256"
        - "ECDHE-RSA-AES128-GCM-SHA256"
        - "ECDHE-ECDSA-AES256-GCM-SHA384"
        - "ECDHE-RSA-AES256-GCM-SHA384"
        - "ECDHE-ECDSA-CHACHA20-POLY1305"
        - "ECDHE-RSA-CHACHA20-POLY1305"
        - "ECDHE-ECDSA-AES128-SHA"
        - "ECDHE-RSA-AES128-SHA"
        - "ECDHE-ECDSA-AES256-SHA"
        - "ECDHE-RSA-AES256-SHA"
