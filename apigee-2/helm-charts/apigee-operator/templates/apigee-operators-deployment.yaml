apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    apigee.cloud.google.com/platform: apigee
    control-plane: controller-manager
  name: apigee-controller-manager
  namespace: {{ include "namespace" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        apigee.cloud.google.com/platform: apigee
        app: apigee-controller
        app.kubernetes.io/component: manager
        app.kubernetes.io/created-by: k8s-controllers
        app.kubernetes.io/instance: controller-manager
        app.kubernetes.io/managed-by: kustomize
        app.kubernetes.io/name: deployment
        app.kubernetes.io/part-of: k8s-controllers
        control-plane: controller-manager
        revision: "{{ .Revision }}"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsGroup: {{ .Values.apigeeGroupID }}
        runAsUser: {{ .Values.apigeeUserID }}
        seccompProfile:
          type: RuntimeDefault
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      affinity:
        {{- include "nodeAffinity.runtime" . | nindent 8 }}
      {{- end }}
      {{- $t := default .Values.tolerations .Values.ao.tolerations }}
      {{- with $t }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - args:
        - --tls-cert-file=/tmp/k8s-webhook-server/serving-certs/tls.crt
        - --tls-private-key-file=/tmp/k8s-webhook-server/serving-certs/tls.key
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: {{ include "container.image" (dict "hub" .Values.hub "o" .Values.kubeRBACProxy "n" "apigee-kube-rbac-proxy") }}
        imagePullPolicy: {{ .Values.kubeRBACProxy.image.pullPolicy }}
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        {{- with .Values.kubeRBACProxy.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 998
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        - --apigee-runtime-type=hybrid
        - --log-level={{ .Values.ao.args.loglevel }}
        - --enable-webhooks={{ .Values.ao.args.enableWebhooks }}
        - --enable-controllers={{ .Values.ao.args.enableControllers }}
        - --disable-embedded-asm-apigee-route-controller=true
        - --disable-embedded-asm-apigee-deployment-controller=true
        - --enable-api-client={{ .Values.ao.args.enableAPIClient }}
        - --disable-istio-config-in-apiserver=true
        - --disable-fluentd-size-limit={{ .Values.ao.args.disableFluentdSizeLimit }}
        - --disable-managed-clusterroles={{ .Values.ao.args.disableManagedClusterRoles }}
        - --disable-sa-volume-projection={{ .Values.ao.args.disableSAProjection }}
        - --disable-secret-rotation-controller=false
        {{- if .Values.ao.certManagerCAIssuerEnabled }}
        - --cert-issuer-name=apigee-ca-issuer
        {{- end }}
        {{- if .Values.ao.args.proxyChainingIngressSvcDNS }}
        - --proxy-chaining-ingress-svc-dns={{ .Values.ao.args.proxyChainingIngressSvcDNS }}
        {{- end }}
        command:
        - /manager
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if .Values.cassandra.auth.secretProviderClass }}
        - name: CASSANDRA_JOLOKIA_USERNAME_PATH
          value: /opt/apigee/externalsecrets/jolokiaUsername
        - name: CASSANDRA_JOLOKIA_PASSWORD_PATH
          value: /opt/apigee/externalsecrets/jolokiaPassword
        {{- end}}
        image: {{ include "container.image" (dict "hub" .Values.hub "o" .Values.ao "n" "apigee-operators") }}
        imagePullPolicy: {{ .Values.ao.image.pullPolicy }}
        livenessProbe:
          failureThreshold: 2
          httpGet:
            path: /healthz
            port: healthcheck
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8081
          name: healthcheck
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthcheck
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        {{- with .Values.ao.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
          readOnlyRootFilesystem: true
          runAsGroup: 998
          runAsNonRoot: true
          runAsUser: 999
        startupProbe:
          failureThreshold: 30
          httpGet:
            path: /healthz
            port: healthcheck
          periodSeconds: 10
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /tmp
          name: tmpfs
        {{- if .Values.cassandra.auth.secretProviderClass }}
        - name: apigee-external-secrets
          mountPath: /opt/apigee/externalsecrets
          readOnly: true
        {{- end }}
      hostNetwork: {{ .Values.ao.hostNetwork }}
      serviceAccountName: apigee-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - emptyDir: {}
        name: tmpfs
      {{- if .Values.cassandra.auth.secretProviderClass }}
      - name: apigee-external-secrets
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "{{ .Values.cassandra.auth.secretProviderClass }}"
      {{- end }}
